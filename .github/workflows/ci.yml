name: MERN CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # - name: 🛠️ Create .env.test file
      #   run: |
      #     echo "MONGO_URI=${{ secrets.MONGO_URI }}" > backend/.env.test
      #     echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> backend/.env.test
      #     echo "PORT=${{ secrets.PORT }}" >> backend/.env.test
      - name: 🛠️ Create .env.test file
        run: |
          cat <<EOF > backend/.env.test
          MONGO_URI=${{ secrets.MONGO_URI }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          PORT=${{ secrets.PORT }}
          EOF

      
      - name: Debug .env.test
        run: cat backend/.env.test

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Run backend tests
        run: |
          cd backend
          npm test

      # - name: Install frontend dependencies
      #   run: |
      #     cd client
      #     npm install

      # - name: Run frontend build
      #   run: |
      #     cd client
      #     npm run build


# name: MERN CI

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest

#     services:
#       mongo:
#         image: mongo:5
#         ports:
#           - 27017:27017
#         options: >-
#           --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'"
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     env:
#       MONGO_URL: mongodb://localhost:27017/testdb
#       NODE_ENV: test

#     steps:
#       - name: Create .env.test
#         run: |
#           echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> backend/.env.test
#           echo "JWT_SECRET=testsecret" >> backend/.env.test
#           echo "PORT=5000" >> backend/.env.test

#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 18

#       - name: Install backend dependencies
#         run: |
#           cd backend
#           npm install

#       - name: Run backend tests
#         run: |
#           cd backend
#           npm test

#       - name: Install frontend dependencies
#         run: |
#           cd frontend
#           npm install

#       - name: Run frontend build
#         run: |
#           cd frontend
#           npm run build


# Hale CI attempt.
      # - name: Checkout code
      #   uses: actions/checkout@v3

      # - name: Setup Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 18

      # - name: Create .env.test file
      #   run: |
      #     echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> backend/.env.test
      #     echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> backend/.env.test
      #     echo "PORT=${{ secrets.PORT }}" >> backend/.env.test

      # - name: Install backend dependencies
      #   run: |
      #     cd backend
      #     npm install

      # - name: Run backend tests
      #   run: |
      #     cd backend
      #     cp .env.test .env  # Make sure Jest reads from `.env`
      #     npm test